-- MySQL Script generated by MySQL Workbench
-- Sat Jan  2 17:26:08 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema EnterpriseDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EnterpriseDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EnterpriseDB` DEFAULT CHARACTER SET utf8 ;
USE `EnterpriseDB` ;

-- -----------------------------------------------------
-- Table `EnterpriseDB`.`Administrator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnterpriseDB`.`Administrator` ;

CREATE TABLE IF NOT EXISTS `EnterpriseDB`.`Administrator` (
  `id` VARCHAR(8) NOT NULL,
  `name` VARCHAR(16) NOT NULL,
  `passwd` VARCHAR(32) NOT NULL,
  `security` VARCHAR(32) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnterpriseDB`.`Department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnterpriseDB`.`Department` ;

CREATE TABLE IF NOT EXISTS `EnterpriseDB`.`Department` (
  `id` VARCHAR(8) NOT NULL,
  `base_salary` INT NULL,
  `name` VARCHAR(32) NULL,
  `member_num` INT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `EnterpriseDB`.`Management`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnterpriseDB`.`Management` ;

CREATE TABLE IF NOT EXISTS `EnterpriseDB`.`Management` (
  `salary` INT NULL,
  `job` VARCHAR(16) NOT NULL,
  `department_id` VARCHAR(8) NOT NULL,
  `worker_id` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`job`, `department_id`, `worker_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnterpriseDB`.`Worker`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnterpriseDB`.`Worker` ;

CREATE TABLE IF NOT EXISTS `EnterpriseDB`.`Worker` (
  `id` VARCHAR(8) NOT NULL,
  `sex` VARCHAR(2) NULL,
  `name` VARCHAR(8) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `EnterpriseDB`.`Attendence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnterpriseDB`.`Attendence` ;

CREATE TABLE IF NOT EXISTS `EnterpriseDB`.`Attendence` (
  `worker_id` VARCHAR(8) UNICODE NULL,
  `state` VARCHAR(8) NULL DEFAULT 'Pass',
  `year` INT NOT NULL,
  `month` INT NOT NULL,
  `day` INT NOT NULL,
  PRIMARY KEY (`year`, `month`, `day`));

USE `EnterpriseDB`;

DELIMITER $$

USE `EnterpriseDB`$$
DROP TRIGGER IF EXISTS `EnterpriseDB`.`Worker_BEFORE_INSERT` $$
USE `EnterpriseDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EnterpriseDB`.`Worker_BEFORE_INSERT` BEFORE INSERT ON `Worker` FOR EACH ROW
BEGIN
	if new.sex != '男' and new.sex != '女'
	then signal sqlstate '45000'
    set message_text = '性别必须为男/女';
	end if;
END$$


USE `EnterpriseDB`$$
DROP TRIGGER IF EXISTS `EnterpriseDB`.`Worker_BEFORE_UPDATE` $$
USE `EnterpriseDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EnterpriseDB`.`Worker_BEFORE_UPDATE` BEFORE UPDATE ON `Worker` FOR EACH ROW
BEGIN
	if new.sex != '男' and new.sex != '女'
	then signal sqlstate '45000'
    set message_text = '性别必须为男/女';
	end if;
END$$


USE `EnterpriseDB`$$
DROP TRIGGER IF EXISTS `EnterpriseDB`.`Attendence_BEFORE_INSERT` $$
USE `EnterpriseDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EnterpriseDB`.`Attendence_BEFORE_INSERT` BEFORE INSERT ON `Attendence` FOR EACH ROW
BEGIN
	if new.state != '正常' and new.state != '迟到' 
    and new.state != '缺勤' and new.state != '缺勤'
	then signal sqlstate '45000'
    set message_text = '状态必须为正常/迟到/缺勤/请假之一';
	end if;
END$$


USE `EnterpriseDB`$$
DROP TRIGGER IF EXISTS `EnterpriseDB`.`Attendence_BEFORE_UPDATE` $$
USE `EnterpriseDB`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EnterpriseDB`.`Attendence_BEFORE_UPDATE` BEFORE UPDATE ON `Attendence` FOR EACH ROW
BEGIN
	if new.state != '正常' and new.state != '迟到' 
    and new.state != '缺勤' and new.state != '缺勤'
	then signal sqlstate '45000'
    set message_text = '状态必须为正常/迟到/缺勤/请假之一';
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `EnterpriseDB`.`Administrator`
-- -----------------------------------------------------
START TRANSACTION;
USE `EnterpriseDB`;
INSERT INTO `EnterpriseDB`.`Administrator` (`id`, `name`, `passwd`, `security`) VALUES ('01145140', '张昊熹', '18340207', NULL);
INSERT INTO `EnterpriseDB`.`Administrator` (`id`, `name`, `passwd`, `security`) VALUES ('18340206', '张德龙', '18340206', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `EnterpriseDB`.`Department`
-- -----------------------------------------------------
START TRANSACTION;
USE `EnterpriseDB`;
INSERT INTO `EnterpriseDB`.`Department` (`id`, `base_salary`, `name`, `member_num`) VALUES ('120', 50, '计算机类', 50);

COMMIT;


-- -----------------------------------------------------
-- Data for table `EnterpriseDB`.`Management`
-- -----------------------------------------------------
START TRANSACTION;
USE `EnterpriseDB`;
INSERT INTO `EnterpriseDB`.`Management` (`salary`, `job`, `department_id`, `worker_id`) VALUES (20210102, '码农', '120', '001');

COMMIT;


-- -----------------------------------------------------
-- Data for table `EnterpriseDB`.`Worker`
-- -----------------------------------------------------
START TRANSACTION;
USE `EnterpriseDB`;
INSERT INTO `EnterpriseDB`.`Worker` (`id`, `sex`, `name`) VALUES ('001', '男', '关羽');
INSERT INTO `EnterpriseDB`.`Worker` (`id`, `sex`, `name`) VALUES ('002', '女', '张飞');
INSERT INTO `EnterpriseDB`.`Worker` (`id`, `sex`, `name`) VALUES ('003', '男', '刘备');
INSERT INTO `EnterpriseDB`.`Worker` (`id`, `sex`, `name`) VALUES ('004', '女', '赵云');

COMMIT;


-- -----------------------------------------------------
-- Data for table `EnterpriseDB`.`Attendence`
-- -----------------------------------------------------
START TRANSACTION;
USE `EnterpriseDB`;
INSERT INTO `EnterpriseDB`.`Attendence` (`worker_id`, `state`, `year`, `month`, `day`) VALUES ('001', '正常', 2021, 1, 1);

COMMIT;

